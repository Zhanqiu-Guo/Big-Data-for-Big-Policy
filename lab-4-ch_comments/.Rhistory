resy <- cor.test(df$year, df$CIT_INJURE, method = "pearson")
#WE'RE NOW USING WHAT WE LEARNED IN LAB 1! - Vectors and matrices are great for displaying data concisely
#Placing the estimates and p-values for each test into a vetor
corrvalues <- c(resb$estimate, resw$estimate, resh$estimate, resf$estimate, resy$estimate, resb$p.value, resw$p.value, resh$p.value, resf$p.value, resy$p.value)
#Creating an output matrix with our test results!
x <- matrix(corrvalues, nrow = 5, dimnames = list(c("black", "white", "hispanic", "female", "year"), c("estimate","p value")))  #recall that c() allows us to concatenate values in R. So here we are concatenating these unique names into a list
x
#Correlation tests
resb2 <- cor.test(df$co_race_b, df$CIT_INJURE, method = "pearson")
resw2 <- cor.test(df$co_race_w, df$CIT_INJURE, method = "pearson")
resh2 <- cor.test(df$co_race_h, df$CIT_INJURE, method = "pearson")
resf2 <- cor.test(df$co_gen_f, df$CIT_INJURE, method = "pearson")
#Placing the estimates and p-values for each test into a vetor
corrvalues <- c(resb2$estimate, resw2$estimate, resh2$estimate, resf2$estimate, resb2$p.value, resw2$p.value, resh2$p.value, resf2$p.value)
#Creating an output matrix with our test results!
y <- matrix(corrvalues, nrow = 4, dimnames = list(c("black","white","hispanic", "female"), c("estimate","p value")))
y
#Correlation tests for Officer Beat
resbeat <- cor.test(as.numeric(df$BEAT), df$CIT_INJURE, method = "pearson")
resbeat$estimate
resbeat$p.value
#Correlation tests for Dallas Division
resdiv <- cor.test(df$DIVISION_INT, df$CIT_INJURE, method = "pearson")
resdiv$estimate
resdiv$p.value
#Code your answer here
table(df$CIT_INJURE)
initial_cb <- lm(CIT_INJURE ~ cit_black, data = df)
summary(initial_cb) #this provides us with an output where we can determine whether the relationship is significant or not.
initial_cw <- lm(CIT_INJURE ~ cit_white, data = df)
summary(initial_cw) #summary() provides us with an output where we can determine whether the relationship is significant or not.
#Treating race as a factor and setting white as our comparison group
df$CitRace<-as.factor(df$CitRace)
df$CitRace<-relevel(df$CitRace, ref="White")
summary(lm(CIT_INJURE~CitRace, data=df))
inj <- lm(CIT_INJURE ~ CitRace, data = df)
visreg(inj, "CitRace", type="contrast")
#Code answer here
summary(lm(CIT_INJURE ~ CitRace + year, data = df))
ci <- predict(inj, interval = "confidence")
df <- cbind(df, ci)
#Code answer here
#Indicator equal to 1 or TRUE after the policy was passed
inj_year_month$policy <- inj_year_month$year_month >= 2014.5
#Running summary statistics
inj_year_month %>%
group_by(policy) %>%
summarise(
count = n(),
mean = mean(n, na.rm = TRUE),
sd = sd(n, na.rm = TRUE)
)
# Compute the analysis of variance
res.aov <- aov(n ~ policy, data = inj_year_month)
# Summary of the analysis
summary(res.aov)
#t-test
pairwise.t.test(inj_year_month$n, inj_year_month$policy,
p.adjust.method = "BH")
#Running a regression
count <- lm(n ~ policy, data = inj_year_month)
summary(count)
#Subsetting My Dataset
myvars <- c("CIT_INJURE", "BEAT", "off_female", "off_white", "off_black", "off_hispanic", "OFF_INJURE", "CIT_ARREST", "cit_white", "cit_black", "cit_hispanic", "cit_female" )
pred_df <- df[myvars]
pred_df$BEAT<-as.numeric(pred_df$BEAT)
pred_df$OFF_INJURE <- recode(pred_df$OFF_INJURE, "No" = "0", "Yes" = "1",  .default = NA_character_)
pred_df$OFF_INJURE <- as.numeric(pred_df$OFF_INJURE)
pred_df <- subset(pred_df, pred_df$OFF_INJURE!="")
pred_df$CIT_ARREST <- recode(pred_df$CIT_ARREST, "No" = "0", "Yes" = "1",  .default = NA_character_)
pred_df$CIT_ARREST <- as.numeric(pred_df$CIT_ARREST)
pred_df <- subset(pred_df, pred_df$CIT_ARREST!="")
summary(pred_df)
#Prepping the Train and Test Datasets
set.seed(100) #sets the starting sequence to make sure we get the same results each time we run the below code
train <- sample(nrow(pred_df), 0.7*nrow(pred_df), replace = FALSE) #splitting the data into 70% for train and 30% for test is common
TrainSet <- pred_df[train,]
ValidSet <- pred_df[-train,]
summary(TrainSet)
summary(ValidSet)
#Running a Random Forest Model
#Note you don't have to specify ntree and mtry. These change the number of trees and the number of variables randomly sampled at each stage.
model1 <- randomForest( as.factor(CIT_INJURE)~ ., data = TrainSet, ntree = 500, mtry = 6,importance = TRUE)
model1
#Checking the importance of variables in our model
importance(model1)
varImpPlot(model1)
cfdg <- cfdg %>% group_by(year)
cfdg <- cfdg %>% group_by(Year)
mpuclf
mICR
pairwise.t.test(cfdg$ICR,cfdg$puclf,
p.adjust.method = "BH")
mpuclf <- mean(cfdg$Proportion.Unemployed.in.Civilian.Labor.Force)
mICR <- mean(cfdg$IC_Rate)
cfdg <- cfdg %>%
mutate(puclf = case_when(
Proportion.Unemployed.in.Civilian.Labor.Force < mpuclf ~ 0,
Proportion.Unemployed.in.Civilian.Labor.Force >= mpuclf ~ 1))
cfdg <- cfdg %>%
mutate(ICR = case_when(
IC_Rate < mICR ~ 0,
IC_Rate >= mICR ~ 1))
cfdg <- cfdg %>% group_by(Year)
mpuclf
mICR
pairwise.t.test(cfdg$ICR,cfdg$puclf,
p.adjust.method = "BH")
cfdg <- cfdg %>% group_by(Year)
mpuclf <- mean(cfdg$Proportion.Unemployed.in.Civilian.Labor.Force)
mICR <- mean(cfdg$IC_Rate)
cfdg <- cfdg %>%
mutate(puclf = case_when(
Proportion.Unemployed.in.Civilian.Labor.Force < mpuclf ~ 0,
Proportion.Unemployed.in.Civilian.Labor.Force >= mpuclf ~ 1))
cfdg <- cfdg %>%
mutate(ICR = case_when(
IC_Rate < mICR ~ 0,
IC_Rate >= mICR ~ 1))
mpuclf
mICR
pairwise.t.test(cfdg$ICR,cfdg$puclf,
p.adjust.method = "BH")
cfdg <- cfdg %>% group_by(Year)
mpuclf <- meddian(cfdg$Proportion.Unemployed.in.Civilian.Labor.Force)
cfdg <- cfdg %>% group_by(Year)
mpuclf <- median(cfdg$Proportion.Unemployed.in.Civilian.Labor.Force)
mICR <- median(cfdg$IC_Rate)
puclf <- Proportion.Unemployed.in.Civilian.Labor.Force >= mpuclf
cfdg <- cfdg %>% group_by(Year)
mpuclf <- median(cfdg$Proportion.Unemployed.in.Civilian.Labor.Force)
mICR <- median(cfdg$IC_Rate)
puclf <- cfdg$Proportion.Unemployed.in.Civilian.Labor.Force >= mpuclf
ICR <- cfdg$IC_Rate >= mICR
mpuclf
mICR
pairwise.t.test(cfdg$ICR,cfdg$puclf,
p.adjust.method = "BH")
cfdg <- cfdg %>% group_by(Year)
mpuclf <- median(cfdg$Proportion.Unemployed.in.Civilian.Labor.Force)
mICR <- median(cfdg$IC_Rate)
puclf <- cfdg$Proportion.Unemployed.in.Civilian.Labor.Force >= 0.27
ICR <- cfdg$IC_Rate >= 1900
mpuclf
mICR
pairwise.t.test(cfdg$ICR,cfdg$puclf,
p.adjust.method = "BH")
cfdg <- cfdg %>% group_by(Year)
mpuclf <- median(cfdg$Proportion.Unemployed.in.Civilian.Labor.Force)
mICR <- median(cfdg$IC_Rate)
puclf <- cfdg$Proportion.Unemployed.in.Civilian.Labor.Force >= 0.27
ICR <- cfdg$IC_Rate >= 1900
mpuclf
mICR
pairwise.t.test(ICR,puclf,
p.adjust.method = "BH")
cfdg <- cfdg %>% group_by(Year)
mpuclf <- max(cfdg$Proportion.Unemployed.in.Civilian.Labor.Force)-min(cfdg$Proportion.Unemployed.in.Civilian.Labor.Force)
mICR <- max(cfdg$IC_Rate)-min(cfdg$IC_Rate)
puclf <- cfdg$Proportion.Unemployed.in.Civilian.Labor.Force >= mpuclf
ICR <- cfdg$IC_Rate >= mICR
mpuclf
mICR
pairwise.t.test(ICR,puclf,
p.adjust.method = "BH")
cfdg <- cfdg %>% group_by(Year)
mpuclf <- (max(cfdg$Proportion.Unemployed.in.Civilian.Labor.Force)-min(cfdg$Proportion.Unemployed.in.Civilian.Labor.Force))/2
mICR <- (max(cfdg$IC_Rate)-min(cfdg$IC_Rate))/2
puclf <- cfdg$Proportion.Unemployed.in.Civilian.Labor.Force >= mpuclf
ICR <- cfdg$IC_Rate >= mICR
mpuclf
mICR
pairwise.t.test(ICR,puclf,
p.adjust.method = "BH")
cfdg <- cfdg %>% group_by(Year)
mpuclf <- median(cfdg$Proportion.Unemployed.in.Civilian.Labor.Force)
mICR <- median(cfdg$IC_Rate)
puclf <- cfdg$Proportion.Unemployed.in.Civilian.Labor.Force >= mpuclf
ICR <- cfdg$IC_Rate >= mICR
mpuclf
mICR
pairwise.t.test(ICR,puclf,
p.adjust.method = "BH")
mICR1 <- mean(cfdg$IC_Rate,ICR==1)
mICR1 <- mean(cfdg$IC_Rate,0.rm=T)
mICR1 <- mean(cfdg$IC_Rate),ICR=1
mICR1 <- filter(cfdg,mean(cfdg$IC_Rate),ICR==1)
mICR1 <- filter(cfdg,ICR==1)
View(mICR1)
mICR1 <- mean(mICR1)
mICR1 <- mean(mICR1,na.rm = T)
mICR1 <- mean(mICR1,na.rm = T)
mICR <- mean(mICR1,na.rm = T)
mICR <- mean(mICR1,na.rm = T)
mICR
cfdg <- cfdg %>% group_by(Year)
puclf <- cfdg$Proportion.Unemployed.in.Civilian.Labor.Force >= median(cfdg$Proportion.Unemployed.in.Civilian.Labor.Force)
ICR <- cfdg$IC_Rate >= median(cfdg$IC_Rate)
mICR1 <- filter(cfdg,ICR==1)
mICR <- mean(mICR1,na.rm = T)
mICR
pairwise.t.test(ICR,puclf,
p.adjust.method = "BH")
mICR <- mean(mICR1$IC_Rate,na.rm = T)
mICR
cfdg <- cfdg %>% group_by(Year)
puclf <- cfdg$Proportion.Unemployed.in.Civilian.Labor.Force >= median(cfdg$Proportion.Unemployed.in.Civilian.Labor.Force)
ICR <- cfdg$IC_Rate >= median(cfdg$IC_Rate)
mICR1 <- filter(cfdg,ICR==1)
mICR1 <- mean(mICR1$IC_Rate,na.rm = T)
mICR1
pairwise.t.test(ICR,puclf,
p.adjust.method = "BH")
cfdg <- cfdg %>% group_by(Year)
puclf <- cfdg$Proportion.Unemployed.in.Civilian.Labor.Force >= median(cfdg$Proportion.Unemployed.in.Civilian.Labor.Force)
ICR <- cfdg$IC_Rate >= median(cfdg$IC_Rate)
mpuclf1 <- filter(cfdg,puclf==1)
mpuclf1 <- mean(mICR1$Proportion.Unemployed.in.Civilian.Labor.Force,na.rm = T)
cfdg <- cfdg %>% group_by(Year)
puclf <- cfdg$Proportion.Unemployed.in.Civilian.Labor.Force >= median(cfdg$Proportion.Unemployed.in.Civilian.Labor.Force)
ICR <- cfdg$IC_Rate >= median(cfdg$IC_Rate)
mpuclf1 <- filter(cfdg,puclf==1)
mpuclf1 <- mean(cfdg$Proportion.Unemployed.in.Civilian.Labor.Force,na.rm = T)
mpuclf0 <- filter(cfdg,puclf==0)
mpuclf0 <- mean(mICR0$Proportion.Unemployed.in.Civilian.Labor.Force,na.rm = T)
cfdg <- cfdg %>% group_by(Year)
puclf <- cfdg$Proportion.Unemployed.in.Civilian.Labor.Force >= median(cfdg$Proportion.Unemployed.in.Civilian.Labor.Force)
ICR <- cfdg$IC_Rate >= median(cfdg$IC_Rate)
mpuclf1 <- filter(cfdg,puclf==1)
mpuclf1 <- mean(cfdg$Proportion.Unemployed.in.Civilian.Labor.Force,na.rm = T)
mpuclf0 <- filter(cfdg,puclf==0)
mpuclf0 <- mean(cfdg$Proportion.Unemployed.in.Civilian.Labor.Force,na.rm = T)
mICR1 <- filter(cfdg,ICR==1)
mICR1 <- mean(mICR1$IC_Rate,na.rm = T)
mICR0 <- filter(cfdg,ICR==0)
mICR0 <- mean(mICR0$IC_Rate,na.rm = T)
mICR1
mICR0
mpuclf1
mpuclf0
pairwise.t.test(ICR,puclf,
p.adjust.method = "BH")
cfdg <- cfdg %>% group_by(Year)
puclf <- cfdg$Proportion.Unemployed.in.Civilian.Labor.Force >= median(cfdg$Proportion.Unemployed.in.Civilian.Labor.Force)
ICR <- cfdg$IC_Rate >= median(cfdg$IC_Rate)
mpuclf1 <- filter(cfdg,puclf==1)
mpuclf1 <- mean(mpuclf1$Proportion.Unemployed.in.Civilian.Labor.Force,na.rm = T)
mpuclf0 <- filter(cfdg,puclf==0)
mpuclf0 <- mean(mpuclf1$Proportion.Unemployed.in.Civilian.Labor.Force,na.rm = T)
cfdg <- cfdg %>% group_by(Year)
puclf <- cfdg$Proportion.Unemployed.in.Civilian.Labor.Force >= median(cfdg$Proportion.Unemployed.in.Civilian.Labor.Force)
ICR <- cfdg$IC_Rate >= median(cfdg$IC_Rate)
mpuclf1 <- filter(cfdg,puclf==1)
mpuclf1 <- mean(mpuclf1$Proportion.Unemployed.in.Civilian.Labor.Force,na.rm = T)
mpuclf0 <- filter(cfdg,puclf==0)
mpuclf0 <- mean(mpuclf0$Proportion.Unemployed.in.Civilian.Labor.Force,na.rm = T)
mICR1 <- filter(cfdg,ICR==1)
mICR1 <- mean(mICR1$IC_Rate,na.rm = T)
mICR0 <- filter(cfdg,ICR==0)
mICR0 <- mean(mICR0$IC_Rate,na.rm = T)
mICR1
mICR0
mpuclf1
mpuclf0
pairwise.t.test(ICR,puclf,
p.adjust.method = "BH")
cor.test(cfdg$IC_Rate,cfdg$Proportion.Unemployed.in.Civilian.Labor.Force,method = 'pearson')
View(c2016)
eval <- (cfdg$Median.Household.Income/mean(cfdg$Median.Household.Income))+(cfdg$College.or.More/mean(cfdg$College.or.More))+(mean(cfdg$Proportion.Unemployed.in.Civilian.Labor.Force)/cfdg$Proportion.Unemployed.in.Civilian.Labor.Force)
eval
ggplot(cfdg, aes(x = Proportion.Unemployed.in.Civilian.Labor.Force, y = IC_Rate) +
geom_point() +
geom_smooth(method = "lm") +
labs(x = "Month/Year", y = "Proportion", title = "Proportions of Injuries by Month/Year")
ggplot (cfdg, aes(x = Proportion.Unemployed.in.Civilian.Labor.Force, y = IC_Rate,)) +
geom_point() +
geom_smooth(method = "lm") +
labs(x = "Month/Year", y = "Proportion", title = "Proportions of Injuries by Month/Year")
ggplot (cfdg, aes(x = Proportion.Unemployed.in.Civilian.Labor.Force, y = IC_Rate,)) +
geom_point() +
geom_smooth(method = "lm") +
geom_vline(xintercept = 0) +
labs(x = "Month/Year", y = "Proportion", title = "Proportions of Injuries by Month/Year")
eval <-cfdg%>%filter(Median.Household.Income>=median(cfdg$Median.Household.Income)|
College.or.More>=median(cfdg$College.or.More)|
Proportion.Unemployed.in.Civilian.Labor.Force<=median(cfdg$Proportion.Unemployed.in.Civilian.Labor.Force))
View(eval)
View(cfdg)
ggplot (cfdg, aes(x = Proportion.Unemployed.in.Civilian.Labor.Force, y = IC_Rate,)) +
geom_point() +
geom_smooth(method = "lm") +
labs(x = "Month/Year", y = "Proportion", title = "Proportions of Injuries by Month/Year")
ggplot (cfdg, aes(x = IC_Rate, y = Proportion.Unemployed.in.Civilian.Labor.Force)) +
geom_point() +
geom_smooth(method = "lm") +
labs(x = "Month/Year", y = "Proportion", title = "Proportions of Injuries by Month/Year")
ggplot (cfdg, aes(x = IC_Rate, y = Proportion.Unemployed.in.Civilian.Labor.Force)) +
geom_point() +
geom_smooth(method = "lm") +
labs(x = "IC_Rate", y = "Unemployed proportion", title = "Unemployed proportion by IC_Rate")
Unemployed <- lm(IC_Rate ~ Proportion.Unemployed.in.Civilian.Labor.Force, data=cfdg)
View(Unemployed)
print(Unemployed)
summary(Unemployed)
EDU <- lm(IC_Rate ~ Proportion.Unemployed.in.Civilian.Labor.Force+Education..Total.Population/Population, data=cfdg)
EDU <- lm(IC_Rate ~ Proportion.Unemployed.in.Civilian.Labor.Force+Education..Total.Population/Population, data=cfdg)
print(population)
print(cfdg$Population)
View(cfdg)
library(collapse)
require(doBy)
library(visreg)
library(tidyverse)
library(crosswalkr)
library(zoo)
library(randomForest)
library(readxl)
c2016 <- read_xlsx('./problem-set-4-data/2016-county-index-rates.xlsx')
c2017 <- read_xlsx('./problem-set-4-data/2017-county-index-rates.xlsx')
c2018 <- read_xlsx('./problem-set-4-data/2018-county-index-rates.xlsx')
crosswalk <- read.csv('./problem-set-4-data/crosswalk.csv')
cf2016 <- renamefrom(c2016, crosswalk, a2016, VarName)
cf2017 <- renamefrom(c2017, crosswalk, a2017, VarName)
cf2018 <- renamefrom(c2018, crosswalk, a2018, VarName)
cf <- rbind(cf2016,cf2017,cf2018)
dg <- read.csv('./problem-set-4-data/ny_demographic_census.csv')
cfdg <- left_join(cf, dg, by = 'GISJOIN')
head(cfdg)
tail(cfdg)
cor.test(cfdg$IC_Rate,cfdg$Proportion.Unemployed.in.Civilian.Labor.Force,method = 'pearson')
cfdg <- cfdg %>% group_by(Year)
puclf <- cfdg$Proportion.Unemployed.in.Civilian.Labor.Force >= median(cfdg$Proportion.Unemployed.in.Civilian.Labor.Force)
ICR <- cfdg$IC_Rate >= median(cfdg$IC_Rate)
mpuclf1 <- filter(cfdg,puclf==1)
View(cfdg)
EDU <- lm(IC_Rate ~ Proportion.Unemployed.in.Civilian.Labor.Force+Education..Total.Population/Population, data=cfdg)
cfdg$un <- cfdg$Proportion.Unemployed.in.Civilian.Labor.Force >= mean(Proportion.Unemployed.in.Civilian.Labor.Force) | cfdg$Proportion.Unemployed.in.Civilian.Labor.Force < mean(Proportion.Unemployed.in.Civilian.Labor.Force)
cfdg$un <- cfdg$Proportion.Unemployed.in.Civilian.Labor.Force >= mean(cfdg$Proportion.Unemployed.in.Civilian.Labor.Force) | cfdg$Proportion.Unemployed.in.Civilian.Labor.Force < mean(cfdg$Proportion.Unemployed.in.Civilian.Labor.Force)
aggregate(cfdg$IC_Rate, list(cfdg$un), mean)
mean(cfdg$Proportion.Unemployed.in.Civilian.Labor.Force)
pairwise.t.test(cfdg$IC_Rate, cfdg$un,
p.adjust.method = "BH")
cfdg$un <- cfdg$Proportion.Unemployed.in.Civilian.Labor.Force >= mean(cfdg$Proportion.Unemployed.in.Civilian.Labor.Force) | cfdg$Proportion.Unemployed.in.Civilian.Labor.Force < mean(cfdg$Proportion.Unemployed.in.Civilian.Labor.Force)
aggregate(cfdg$IC_Rate, list(cfdg$un), mean)
pairwise.t.test(cfdg$IC_Rate, cfdg$un,
p.adjust.method = "BH")
cfdg$un <- cfdg$Proportion.Unemployed.in.Civilian.Labor.Force >= mean(cfdg$Proportion.Unemployed.in.Civilian.Labor.Force)
aggregate(cfdg$IC_Rate, list(cfdg$un), mean)
pairwise.t.test(cfdg$IC_Rate, cfdg$un,
p.adjust.method = "BH")
library(collapse)
require(doBy)
library(visreg)
library(tidyverse)
library(crosswalkr)
library(zoo)
library(randomForest)
library(readxl)
c2016 <- read_xlsx('./problem-set-4-data/2016-county-index-rates.xlsx')
c2017 <- read_xlsx('./problem-set-4-data/2017-county-index-rates.xlsx')
c2018 <- read_xlsx('./problem-set-4-data/2018-county-index-rates.xlsx')
crosswalk <- read.csv('./problem-set-4-data/crosswalk.csv')
cf2016 <- renamefrom(c2016, crosswalk, a2016, VarName)
cf2017 <- renamefrom(c2017, crosswalk, a2017, VarName)
cf2018 <- renamefrom(c2018, crosswalk, a2018, VarName)
cf <- rbind(cf2016,cf2017,cf2018)
dg <- read.csv('./problem-set-4-data/ny_demographic_census.csv')
cfdg <- left_join(cf, dg, by = 'GISJOIN')
head(cfdg)
tail(cfdg)
cor.test(cfdg$IC_Rate,cfdg$Proportion.Unemployed.in.Civilian.Labor.Force,method = 'pearson')
cfdg$un <- cfdg$Proportion.Unemployed.in.Civilian.Labor.Force >= mean(cfdg$Proportion.Unemployed.in.Civilian.Labor.Force)
aggregate(cfdg$IC_Rate, list(cfdg$un), mean)
pairwise.t.test(cfdg$IC_Rate, cfdg$un,
p.adjust.method = "BH")
print(cfdg$Population)
EDU <- lm(IC_Rate ~ Proportion.Unemployed.in.Civilian.Labor.Force+Education..Total.Population/Population, data=cfdg)
EDU <- lm(IC_Rate ~ Proportion.Unemployed.in.Civilian.Labor.Force+Education..Total.Population/cfdg$Population, data=cfdg)
EDU <- lm(IC_Rate ~ Proportion.Unemployed.in.Civilian.Labor.Force+Population, data=cfdg)
print(cfdg$Year)
EDU <- lm(IC_Rate ~ Proportion.Unemployed.in.Civilian.Labor.Force+Education..Total.Population/'Population', data=cfdg)
EDU <- lm(IC_Rate ~ Proportion.Unemployed.in.Civilian.Labor.Force+Education..Total.Population/`Population `, data=cfdg)
summary(EDU)
EDU <- lm(IC_Rate ~ Proportion.Unemployed.in.Civilian.Labor.Force + College.or.More/Education..Total.Population, data=cfdg)
summary(EDU)
EDU <- lm(IC_Rate ~ Proportion.Unemployed.in.Civilian.Labor.Force + College.or.More/Education..Total.Population, data=cfdg)
Male <- lm(IC_Rate ~ Proportion.Unemployed.in.Civilian.Labor.Force + Male..Total.Population/`Population `, data=cfdg)
summary(EDU)
summary(Male)
EDU <- lm(IC_Rate ~ Proportion.Unemployed.in.Civilian.Labor.Force + College.or.More/Education..Total.Population, data=cfdg)
Male <- lm(IC_Rate ~ Proportion.Unemployed.in.Civilian.Labor.Force + (Male..Total.Population/`Population `), data=cfdg)
summary(EDU)
summary(Male)
EDU <- lm(IC_Rate ~ Proportion.Unemployed.in.Civilian.Labor.Force + College.or.More/Education..Total.Population, data=cfdg)
Male <- lm(IC_Rate ~ Proportion.Unemployed.in.Civilian.Labor.Force + Male..Total.Population/Sex.by.Age..Total.Population, data=cfdg)
summary(EDU)
summary(Male)
EDU <- lm(IC_Rate ~ Proportion.Unemployed.in.Civilian.Labor.Force + College.or.More/Education..Total.Population, data=cfdg)
Male <- lm(IC_Rate ~ Proportion.Unemployed.in.Civilian.Labor.Force + Median.Household.Income, data=cfdg)
summary(EDU)
summary(Male)
EDU <- lm(IC_Rate ~ Proportion.Unemployed.in.Civilian.Labor.Force + College.or.More/Education..Total.Population, data=cfdg)
Income <- lm(IC_Rate ~ Proportion.Unemployed.in.Civilian.Labor.Force + Median.Household.Income, data=cfdg)
summary(EDU)
summary(Income)
ggplot (cfdg, aes(x = Proportion.Unemployed.in.Civilian.Labor.Force, y = IC_Rate, group=EDU)) +
geom_point() +
geom_smooth(method = "lm") +
labs(x = "Month/Year", y = "Proportion", title = "Proportions of Injuries by Month/Year")
ggplot (cfdg, aes(x = Proportion.Unemployed.in.Civilian.Labor.Force, y = IC_Rate, group=College.or.More/Education..Total.Population>mean(College.or.More/Education..Total.Population))) +
geom_point() +
geom_smooth(method = "lm") +
labs(x = "Month/Year", y = "Proportion", title = "Proportions of Injuries by Month/Year")
ggplot (cfdg, aes(x = IC_Rate, y = Proportion.Unemployed.in.Civilian.Labor.Force, group=College.or.More/Education..Total.Population>mean(College.or.More/Education..Total.Population))) +
geom_point() +
geom_smooth(method = "lm") +
labs(x = "Month/Year", y = "Proportion", title = "Proportions of Injuries by Month/Year")
ggplot (cfdg, aes(x = IC_Rate, y = Proportion.Unemployed.in.Civilian.Labor.Force, group=Median.Household.Income>mean(Median.Household.Income))) +
geom_point() +
geom_smooth(method = "lm") +
labs(x = "IC_Rate", y = "Unemployed proportion", title = "Unemployed proportion by IC_Rate")
ggplot (cfdg, aes(x = IC_Rate, y = Proportion.Unemployed.in.Civilian.Labor.Force, group=College.or.More/Education..Total.Population>mean(College.or.More/Education..Total.Population))) +
geom_point() +
geom_smooth(method = "lm") +
labs(x = "IC_Rate", y = "Unemployed proportion", title = "Unemployed proportion by IC_Rate")
ggplot (cfdg, aes(x = IC_Rate, y = Proportion.Unemployed.in.Civilian.Labor.Force)) +
geom_point() +
geom_smooth(method = "lm") +
labs(x = "IC_Rate", y = "Unemployed proportion", title = "Unemployed proportion by IC_Rate")
ggplot (cfdg, aes(x = IC_Rate, y = Proportion.Unemployed.in.Civilian.Labor.Force, group=College.or.More/Education..Total.Population>median(College.or.More/Education..Total.Population))) +
geom_point() +
geom_smooth(method = "lm") +
labs(x = "IC_Rate", y = "Unemployed proportion", title = "Unemployed proportion by IC_Rate")
ggplot (cfdg, aes(x = IC_Rate, y = Proportion.Unemployed.in.Civilian.Labor.Force, group=College.or.More/Education..Total.Population<mean(College.or.More/Education..Total.Population))) +
geom_point() +
geom_smooth(method = "lm") +
labs(x = "IC_Rate", y = "Unemployed proportion", title = "Unemployed proportion by IC_Rate")
ggplot (cfdg, aes(x = IC_Rate, y = Proportion.Unemployed.in.Civilian.Labor.Force, group=College.or.More/Education..Total.Population>mean(College.or.More/Education..Total.Population))) +
geom_point() +
geom_smooth(method = "lm") +
labs(x = "IC_Rate", y = "Unemployed proportion", title = "Unemployed proportion by IC_Rate")
ggplot (cfdg, aes(x = IC_Rate, y = Proportion.Unemployed.in.Civilian.Labor.Force, group=College.or.More/Education..Total.Population>mean(College.or.More/Education..Total.Population))) +
geom_point() +
geom_smooth(method = "lm") +
labs(x = "IC_Rate", y = "Unemployed proportion", title = "Unemployed proportion by IC_Rate with control of education level")
ggplot (cfdg, aes(x = IC_Rate, y = Proportion.Unemployed.in.Civilian.Labor.Force, group=Median.Household.Income>mean(Median.Household.Income))) +
geom_point() +
geom_smooth(method = "lm") +
labs(x = "IC_Rate", y = "Unemployed proportion", title = "Unemployed proportion by IC_Rate with control of income")
Lunemployed <- lm(IC_Rate ~ Proportion.Unemployed.in.Civilian.Labor.Force, data=cfdg)
Lincome <- lm(IC_Rate ~ Proportion.Unemployed.in.Civilian.Labor.Force + Median.Household.Income, data=cfdg)
Ledu <- lm(IC_Rate ~ Proportion.Unemployed.in.Civilian.Labor.Force + College.or.More/Education..Total.Population, data=cfdg)
summary(Lunemployed)
summary(Lincome)
summary(Ledu)
Lunemployed <- lm(IC_Rate ~ Proportion.Unemployed.in.Civilian.Labor.Force, data=cfdg)
Lcontrol <- lm(IC_Rate ~ Proportion.Unemployed.in.Civilian.Labor.Force + Median.Household.Income + College.or.More/Education..Total.Population, data=cfdg)
Lyear <- lm(IC_Rate ~ Proportion.Unemployed.in.Civilian.Labor.Force + Year, data=cfdg)
summary(Lunemployed)
summary(Lcontrol)
summary(Lyear)
Lunemployed <- lm(IC_Rate ~ Proportion.Unemployed.in.Civilian.Labor.Force, data=cfdg)
Lcontrol <- lm(IC_Rate ~ Proportion.Unemployed.in.Civilian.Labor.Force + Median.Household.Income + College.or.More/Education..Total.Population, data=cfdg)
Lyear <- lm(IC_Rate ~ Proportion.Unemployed.in.Civilian.Labor.Force + Year, data=cfdg)
summary(Lunemployed)
summary(Lcontrol)
summary(Lyear)
visreg(IC_Rate, Proportion.Unemployed.in.Civilian.Labor.Force, type="contrast")
visreg(cfdg$IC_Rate, cfdg$Proportion.Unemployed.in.Civilian.Labor.Force, type="contrast")
visreg(Lunemployed, cfdg$Proportion.Unemployed.in.Civilian.Labor.Force, type="contrast")
visreg(Lunemployed, Proportion.Unemployed.in.Civilian.Labor.Force, type="contrast")
visreg(Lunemployed, "Proportion.Unemployed.in.Civilian.Labor.Force, type" = "contrast")
visreg(Lunemployed, "Proportion.Unemployed.in.Civilian.Labor.Force", type = "contrast")
visreg("Proportion.Unemployed.in.Civilian.Labor.Force", Lunemployed, type = "contrast")
visreg("Proportion.Unemployed.in.Civilian.Labor.Force", Lunemployed, type = "contrast")
visreg("Proportion.Unemployed.in.Civilian.Labor.Force", Lunemployed, type = "contrast")
visreg("Proportion.Unemployed.in.Civilian.Labor.Force", Lunemployed, type = "contrast")
visreg("Proportion.Unemployed.in.Civilian.Labor.Force", Lunemployed, type = "contrast")
visreg("Proportion.Unemployed.in.Civilian.Labor.Force", Lunemployed, type = "contrast")
visreg("Proportion.Unemployed.in.Civilian.Labor.Force", Lunemployed, type = "contrast")
visreg("Proportion.Unemployed.in.Civilian.Labor.Force", Lunemployed, type = "contrast")
ggplot (cfdg, aes(x = IC_Rate, y = Proportion.Unemployed.in.Civilian.Labor.Force, group=Median.Household.Income>mean(Median.Household.Income))) +
geom_point() +
geom_smooth(method = "lm") +
labs(x = "IC_Rate", y = "Unemployed proportion", title = "Unemployed proportion by IC_Rate with control of income")
ggplot (cfdg, aes(y = IC_Rate, x = Proportion.Unemployed.in.Civilian.Labor.Force)) +
geom_point() +
geom_smooth(method = "lm") +
labs(y = "IC_Rate", x = "Unemployed proportion", title = "Unemployed proportion by IC_Rate")
ggplot (cfdg, aes(y = IC_Rate, x = Proportion.Unemployed.in.Civilian.Labor.Force, group=College.or.More/Education..Total.Population>mean(College.or.More/Education..Total.Population))) +
geom_point() +
geom_smooth(method = "lm") +
labs(y = "IC_Rate", x = "Unemployed proportion", title = "Unemployed proportion by IC_Rate with control of education level")
ggplot (cfdg, aes(y = IC_Rate, x = Proportion.Unemployed.in.Civilian.Labor.Force)) +
geom_point() +
geom_smooth(method = "lm") +
labs(y = "IC_Rate", x = "Unemployed proportion", title = "Unemployed proportion by IC_Rate")
ggplot (cfdg, aes(y = IC_Rate, x = Proportion.Unemployed.in.Civilian.Labor.Force, group=Median.Household.Income>mean(Median.Household.Income))) +
geom_point() +
geom_smooth(method = "lm") +
labs(y = "IC_Rate", x = "Unemployed proportion", title = "Unemployed proportion by IC_Rate with control of income")
visreg( Lunemployed, "Proportion.Unemployed.in.Civilian.Labor.Force", type = "contrast")
visreg(Lcontrol, "Proportion.Unemployed.in.Civilian.Labor.Force", type = "contrast")
visreg(Lunemployed, "Proportion.Unemployed.in.Civilian.Labor.Force", type = "contrast")
visreg(Lunemployed, "Proportion.Unemployed.in.Civilian.Labor.Force", type = "contrast")
visreg(Lcontrol, "Proportion.Unemployed.in.Civilian.Labor.Force", type = "contrast")
visreg(Lunemployed, "Proportion.Unemployed.in.Civilian.Labor.Force", type = "contrast")
visreg(Lcontrol, "Proportion.Unemployed.in.Civilian.Labor.Force", type = "contrast")
visreg(Lunemployed, "Proportion.Unemployed.in.Civilian.Labor.Force", type = "contrast")
visreg(Lcontrol, "Proportion.Unemployed.in.Civilian.Labor.Force", type = "contrast")
visreg(Lunemployed, "Proportion.Unemployed.in.Civilian.Labor.Force", type = "contrast")
visreg(Lcontrol, "Proportion.Unemployed.in.Civilian.Labor.Force", type = "contrast")
